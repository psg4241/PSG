Practical no.01
Working with Basic C# and ASP.NET
A)Aim: Create an application that obtain 4 input values from user and display the product.
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace product
{
    class Program
    {
        static void Main(string[] args)
        {
           String a, b, c, d;
            int v1, v2, v3, v4;
           Console.WriteLine("Enter four values to calculate product: ");
            Console.WriteLine("Enter first value: ");
            a=Console.ReadLine();
            v1=Convert.ToInt32(a);
            Console.WriteLine("Enter second value: ");
            b=Console.ReadLine();
            v2 = Convert.ToInt32(b);
            Console.WriteLine("Enter third value: ");
           c= Console.ReadLine();
            v3 = Convert.ToInt32(c);
            Console.WriteLine("Enter fourth value: ");
           d= Console.ReadLine();
            v4 = Convert.ToInt32(d);
            Console.WriteLine("Product is: " + (v1*v2*v3*v4));
            Console.ReadKey();
        }
    }
}
Output:

 


B) Aim: Create an application to demonstrate String Operations.
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace stringop
{
    class Program
    {
        static void Main(string[] args)
        {
            String a,b;
            Console.WriteLine("Enter a  first string:");
            a=Console.ReadLine();
            Console.WriteLine("Enter a second string:");
            b = Console.ReadLine();
            Console.WriteLine("Length of string:" + a.Length);
            Console.WriteLine("String in uppercase:" +a.ToUpper());
            Console.WriteLine("String in Lowercase:" + a.ToLower());
            Console.WriteLine("Trimmed String:" + b.Trim());
            Console.WriteLine("Concatenated String:" + a + b);
            Console.WriteLine(a + " equals" + b+"="+(a.Equals(b)));
            Console.WriteLine("Index of e in first string is:" + (a.IndexOf("e")));
            Console.WriteLine(a + " compares to " + b +"="+ (a.CompareTo(b)));
            Console.WriteLine(" removing first 5 elements from second string:" +        b.Remove(5));
            Console.WriteLine("After replacing e to a from first string: " + a.Replace('e', 'a'));
            Console.WriteLine("Substring of second string:"+(b.Substring(2, 5)));
            Console.ReadKey();
        }
  }
}
Output:










 



C)Aim: Create an application that receive the (Student id, Student name, Course name and the Date of Birth) information from set ofform application should also display the information of all the student once the data is entered.
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace studdata
{
    class Program
    {
        static void Main(string[] args)
        {
            string id, name, cname;
            string dob,n;
            int num;
    Console.WriteLine("Enter number of students:");
            n=Console.ReadLine();
            num = Convert.ToInt32(n);
            for(int i=0;i<num; i++)
            {
    Console.WriteLine("Enter id:");
     id = Console.ReadLine();
  Console.WriteLine("Enter a name :");
   name=Console.ReadLine();
  Console.WriteLine("enter course name:");
  cname = Console.ReadLine();
 Console.WriteLine("enter DOB:");
 dob = Console.ReadLine();
  Console.WriteLine("---Student's information---");
   Console.WriteLine("Student id:" + id);
  Console.WriteLine("Student name:" + name);
   Console.WriteLine("course name:" + cname);
   










  Console.WriteLine("DOB:" + dob);
            }
            Console.ReadKey();
       }
    }
}

Output:
  
D)Aim: Create an application to demonstrate following applications:
1) Generate fibonacci series
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace fibonacci
{
    class Program
    {
        static void Main(string[] args)
        {
            int ft = 0, nt = 1, temp,num;
            String n;
            Console.WriteLine("Enter the number to display the fibonacci series: ");
            n = Console.ReadLine();
            num = Convert.ToInt32(n);
            for (int i=0;i<num;i++)
            {
                Console.Write(" " + ft + " ");
                temp = nt;
                nt = nt + ft;
                ft = temp;
            }
            Console.ReadKey();
           }
    }
}

Output:
 












 
2)  Test for Prime Number
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace primenum
{
    class Program
    {
        static void Main(string[] args)
        {
            String n;
            int num, i,m=0,flag=0;
           Console.WriteLine("Enter the number: ");
            n = Console.ReadLine();
            num = Convert.ToInt32(n);
            m = num / 2;
            for (i = 2; i <= m; i++)
            {
                if (num % i == 0)
                {
                   Console.Write(num + " is not a prime number");
                    flag = 1;
                    break;
                }
            }
                if(flag==0)
                {
                    Console.Write(num + " is a prime number");
                }
            Console.ReadKey();
             }
        }
    }
Output:
 
3) Test for Vowel
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace vowel
{
    class Program
    {
        static void Main(string[] args)
        {
            int count=0;
            String ch="good morning";
            for(int i=0;i<ch.Length;i++)
            {
                if((ch.Substring(i,1)=="a")|| (ch.Substring(i, 1) == "e" )||
 (ch.Substring(i, 1) == "i" )|| (ch.Substring(i, 1) == "o" )||
 (ch.Substring(i, 1) == "u" ))
                {
                    count++;
                }
            }
            Console.WriteLine("Entered text is: " + ch);
            Console.WriteLine(" Total number of vowels:"+count);
            Console.ReadKey();
      } 
    }
}
Output:
 










4)Use of for each loop with array
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace foreachloop
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] a = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
            Console.WriteLine("Displaying numbers using for each loop:");
            foreach(int x in a)
            {
                Console.Write(x + " ");
            }
            Console.ReadKey();
        }
    }
}

Output:













5) Reverse a number and find the sum of digits of a number
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace rev&sum
{
    class Program
    {
        static void Main(string[] args)
        {          
          int rev = 0, sum = 0,temp,num;
            String n;
            Console.WriteLine("Enter a number:");
            n = Console.ReadLine();
            num = Convert.ToInt32(n);
             temp = num;
            while(num>0)
            {
                rev = rev * 10 + num % 10;
                sum = sum + num % 10;
                num = num / 10;
            }
            Console.WriteLine("Reversed number is:" + rev);
      Console.WriteLine("Sum of digits of number is:" + sum);
            Console.ReadKey();
        }
    }
}

Output:
 
 





Practical no.02
Working with Object Oriented C# and ASP.NET
A)Aim: Create simple application to perform following operations:
i)Finding Factorial Value:
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace factorial
{
    class Program
    {
        static void Main(string[] args)
        {
            string num;
            int i, n, fact = 1;
            Console.WriteLine("Enter a number:");
            num = Console.ReadLine();
            n = Convert.ToInt32(num);
            for(i=1;i<=n;i++)
            {
                fact = fact * i;
            }
            Console.WriteLine("Factorial of " + n + " is:" + fact);
            Console.ReadKey();

        }
    }
}
Output:
 












 
ii)Money Conversion
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace moneyconversion
{
    class Program
    {
        static void Main(string[] args)
        {
            string euro, IND, USD;
            double i, e, u;
Console.WriteLine("---MONEY CONVERSION---");
Console.WriteLine("---Rupee conversion---");
 Console.WriteLine("Enter a value in Rupees:");
            IND = Console.ReadLine();
            i = Convert.ToDouble(IND);
            e = 87.0776 * i;
  Console.WriteLine("Conversion of Rupee to Euro is:" + e);
            u = i * 68.91 Console.WriteLine("Conversion of Rupee to USD is:" + u);
Console.WriteLine("---Euro conversion---");
  Console.WriteLine("Enter a value in Euros:");
            euro = Console.ReadLine();
            e= Convert.ToDouble(euro);
            i = 0.0115 * e;
 Console.WriteLine("Conversion of Euro to Rupee is:" + i);
            u = e / 1.1126;
  Console.WriteLine("Conversion of Euro to USD is:" + u);   Console.WriteLine("---USD conversion---");
 Console.WriteLine("Enter a value in USD:");
            USD = Console.ReadLine();
            u = Convert.ToDouble(USD);
            i = u / 68.91;
            Console.WriteLine("Conversion of USD to Rupee is:" + i);
            e = 1.1126 * u;
Console.WriteLine("Conversion of USD to Euro is:" + e);
            Console.ReadKey();
        }
    }
}

Output:






















iii)Quadratic Equation
Code:
Program.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Quadraticeqn
{
    class Program
    {
        static void Main(string[] args)
        {
            QuadraticRoots q = new QuadraticRoots();
            q.a = Convert.ToInt32(-2);
            q.b = Convert.ToInt32(2);
            q.c = Convert.ToInt32(4);
            double d = q.compute();
            if(d==0)
            {
                Console.WriteLine("Roots are Real and Equal");
                Console.WriteLine("First root is:" + q.r1);
                Console.WriteLine("Second root is:" + q.r2);
            }
            else if(d>0)
            {
                Console.WriteLine("Roots are Real and Distinct");
                Console.WriteLine("First root is:" + q.r1);
                Console.WriteLine("Second root is:" + q.r2);
            }
            else
            {
                Console.WriteLine("Roots are Imaginary");
                Console.WriteLine("First root is:" + q.r1);
                Console.WriteLine("Second root is:" + q.r2);
            }
            Console.ReadKey();
        }
    }
}
QaudraticRoots.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace ConsoleApp1
{
    class QuadraticRoots
    {
        public double a, b, c, r1, r2;
        public double compute()
        {
            double d1;
            d1 = b * b - 4 * a * c;
            if(d1==0)
                {
                r1 = r2 = (-b) / (2 * a);
                return(d1);
            }
            else if(d1>0)
            {
                r1 = (-b + Math.Sqrt(d1)) / (2 * a);
                r2 = (-b -Math.Sqrt(d1)) / (2 * a);
                return(d1);
            }
            else
            {
                r1 = (-b) / (2 * a);
                r2 = Math.Sqrt(-d1) / (2 * a);
                return(d1);
            }
        }
    }
}
Output:

 



 iv)Temperature Conversion 
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace tempconv
{
    class Program
    {
        static void Main(string[] args)
        {
            string cel, faren;
            double celsius, farenheit;
            Console.Write("enter temperature in celsius:");
            cel=Console.ReadLine();
            celsius = Convert.ToDouble(cel);
            farenheit = (celsius * 9) / 5 + 32;
            Console.WriteLine("Conversion of celsius to farenheit:" + farenheit);
            Console.Write("enter temperature in farenheit:");
            faren = Console.ReadLine();
            farenheit = Convert.ToDouble(faren);
            celsius = (farenheit - 32) * 5 / 9;
             Console.WriteLine("Conversion of farenheit to celsius:" + celsius);
            Console.ReadKey();
        }
    }
}
Output:
 












 
B) Aim: Create an simple application to demonstrate use of following concept:
i)Function Overloading
Code:
Program.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace functionoverloading
{
    class Program
    {
        static void Main(string[] args)
        {
            funover o = new funover();
            Console.WriteLine("---Addition using operator oveloading---");
            Console.WriteLine("Addition of two integer numbers:" + (o.sum(2, 3)));
            Console.WriteLine("Addition of three integer numbers:" + (o.sum(3,4,5)));
            Console.WriteLine("Addition of two double numbers:" + (o.sum(4.5, 2.3)));
            Console.WriteLine("Addition of three double numbers:" + (o.sum(2.1,2.3,3.4)));
            Console.ReadKey();
        }
    }
}











Funover.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace ConsoleApp1
{
    class funover
    {
        public int sum(int a,int b)
        {
            int x;
            return x = a + b;
        }
        public int sum(int a ,int b,int c)
        {
            int y;
            return y = a + b + c;
        }
        public double sum(double a, double b)
        {
            double z;
            return z = a + b;
        }
        public double sum(double a, double b,double c)
        {
            double v;
            return v = a + b + c;
        }
    }
}
Output:
 

 




 
ii)Inheritance(all types)
a) Single inheritance
Code:
 using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Inheritance
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("---Single inheritance---");
           derivedc d = new derivedc();
            d.basem();
            d.derivedm();
            Console.ReadKey();
        }
        class basec
        {
            public void basem()
            {
                Console.WriteLine("Base Class");
            }
        }
        class derivedc : basec
        {
            public void derivedm()
            {
                Console.WriteLine("Derived class");
            }
            }
        }
}
Output:
 




b) Multilevel inheritance
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace multilevelinheritance
{
    class A
    {
        public void show()
        {
            Console.WriteLine("class A:first base class");
        }
    }
    class B : A 
    {
        public void display()
        {
            Console.WriteLine("class B:derived class of A and base class of class C");
        }
    }
    class C : B 
    {
        public void output()
        {
            Console.WriteLine("class C:derived class of class B");
        }
        class multilevel
        {
            public static void Main()
            {
                Console.WriteLine("--- multilevel inheritance---");
                C c = new C();
                c.show();              
                c.display();                
                c.output();
                Console.ReadKey();
            }  } }
Output:
 
c)Hierarchical inheritance
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace hierarchicalinheritance
{
    class A
    {
        public void show()
        {
            Console.WriteLine("class A:base class of class B & clasc C");
        }
    }
    class B : A 
    {
        public void display()
        {
            Console.WriteLine("class B is derived by class A");
        }
    }
    class C : A 
    {
        public void show1()
        {
            Console.WriteLine("class C is derived by class A");
        }
    }
    class hierarchical
    {
        public static void Main()
        {
            Console.WriteLine("---Hierarchical Inheritance---");
            B b = new B();
            C c = new C();
            b.show();
            b.display();
            c.show1();
            Console.ReadKey();
        }
    }
}
Output:
 
iii) Constructor Overloading
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace constructoroverloading
{
    class ADD
    {
       int x, y;
        double f;
        string s;
        public ADD(int a, double b)
        {
            x = a;
            f = b;
        }
        public ADD(int a, string b)
        {
            y = a;
            s = b;
        }
        public void show()
        {
            Console.WriteLine("---1st constructor--- ");
            Console.WriteLine("Addition of int and float values:"+(x + f));
        }
        public void show1()
        {
            Console.WriteLine("---2nd constructor---");
            Console.WriteLine((s + y));
        }
    }
    class program
    {
        static void Main()
        {
            ADD a = new ADD(20, 30.8);
            a.show();
            ADD q = new ADD(12, "Roll No. is: "); 
            q.show1();
            Console.ReadKey();
        }
    }Output:




iv) Interfaces
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace multipleinheritance
{
    class Shape
    {
        public void setSide(int s)
        {
            side = s;
        }
        protected int side;
    }
    public interface Cube
    {
        int cube(int area);
    }
    class square : Shape, Cube
    {
        public int getArea()
        {
            return (side * side);
        }
        public int cube(int area)
        {
            return area * side;
        }
    }
    class Square
    {
        static void Main(string[] args)
        {
            Console.WriteLine("---multiple Inheritance---");
            square sq = new square();
            int area;
            sq.setSide(5);
            area = sq.getArea();
            Console.WriteLine("The area is: {0}", sq.getArea());
            Console.WriteLine("The cube is: {0}", sq.cube(area));
            Console.ReadKey();
        }
    }
}
  Output:


C)Aim: Create simple application to demonstrate use of following concepts:
i)Using Delegates and events
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace delegates&events
{
class rectangle
{
    public delegate void rectdel(double l, double b);
    public void area(double l, double b)
    {
        Console.WriteLine("Area  of rectangle is:" + (l * b));
    }
    public void per(double l,double b)
    {
        Console.WriteLine("Perimeter of rectangle  is:" + 2 * (l + b));
    }
    public static void Main(String [] args)
    {
        rectangle r = new rectangle();
        rectdel rd = new rectdel(r.area);
        rd += r.per;
        rd.Invoke(3.4, 2.3);
        Console.WriteLine();
        rd.Invoke(10.0, 2.0);
        Console.ReadKey();
    }
}
}
Output:
 








ii) Exception Handling
Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace errorhandling
{
    class divnum:Exception
    {
        int result;
        divnum()
        {
            result = 0;
        }
        public void div(int num1,int num2)
        {
            try
            {
                result = num1 / num2;
            }catch(DivideByZeroException e)
            {
                Console.WriteLine(e);
            }
            finally
            {
                Console.WriteLine("Result:"+ result);
            }
        }
        static void Main(string[] args)
        {
            divnum d = new divnum();
            d.div(5, 0);
            Console.ReadKey();
        }
    }
}
Output:
 




Practical 3
A)Create a simple webpage with various server controls to demonstrate setting and use of their properties.
 .Aspx Code:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
    <div>
        <table>
            <tr>
                <td>
                <asp:Label ID="label1" runat="server" Text="Name:" ForeColor="Blue" />
                </td>
                <td>
                    <asp:TextBox ID="tb1" runat="server" />
                </td>
                <td>
                    <asp:Label ID="label9" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label2" runat="server" Text="Address:" ForeColor="#0033CC" />
                </td>
                <td>
                    <asp:TextBox ID="TextBox1" runat="server" TextMode="MultiLine" />
                </td>
                <td>
                    <asp:Label ID="label10" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label3" runat="server" Text="DOB:" ForeColor="#0033CC" />
                </td>
                <td>
                    <asp:Calendar ID="calender1" runat="server" BackColor="#0099FF" BorderColor="Black" ForeColor="White" />
                 </td>
                <td>
                    <asp:Label ID="label11" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label4" runat="server" Text="Age:" ForeColor="#0033CC" />
                </td>
                <td>
                    <asp:TextBox ID="TextBox2" runat="server" />
                </td>
                <td>
                    <asp:Label ID="label12" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label5" runat="server" Text="Gender:" ForeColor="#0033CC" />
                </td>
                <td>
                    <asp:RadioButtonList ID="rdbtn1" runat="server" RepeatDirection="Horizontal" >
                        <asp:ListItem Text="Male"  />
                        <asp:ListItem Text="Female"  />
                        </asp:RadioButtonList>                                      
                </td>
                <td>
                    <asp:Label ID="label13" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label6" runat="server" Text="Hobbies:" ForeColor="#0033CC" />                    
                </td>
                <td>
                    <asp:CheckBoxList ID="ckbx1" runat="server" RepeatDirection="Horizontal">
                        <asp:ListItem Text="Singing"  />
                        <asp:ListItem Text="Dancing"  />
                        <asp:ListItem Text="Reading"  />
                        <asp:ListItem Text="Travelling"  />
                    </asp:CheckBoxList>
                </td>
                <td>
                    <asp:Label ID="label14" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label7" runat="server" Text="E-Mail:" ForeColor="#0033CC" />
                </td>
                <td>
                    <asp:TextBox ID="TextBox3" runat="server" />
                </td>
                <td>
                    <asp:Label ID="label15" runat="server" />
                </td>
            </tr>
            <tr>
                <td>
                    <asp:Label ID="label8" runat="server" Text="Class:" ForeColor="#0033CC" />
                </td>
                <td>
                    <asp:DropDownList ID="drpdn1" runat="server">
                        <asp:ListItem Text="F.Y.I.T."  />
                        <asp:ListItem Text="S.Y.I.T." />
                        <asp:ListItem Text="T.Y.I.T." />
                    </asp:DropDownList>
                </td>
                <td>
                    <asp:Label ID="label16" runat="server" />
                </td>
            </tr>       
        </table>  
        <asp:Button ID="btn" runat="server" Text="Save" OnClick="btn_Click"/>  
    </div>
    </form>
</body>
</html>

.cs Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class _Default : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }
    protected void btn_Click(object sender, EventArgs e)
    {
        label9.Text = "Your Name is: " + tb1.Text;
        label10.Text = "Your Address is: " + TextBox1.Text;
        label11.Text = "Your DOB is: " + calender1.SelectedDate;
        label12.Text = "Your Age is: " + TextBox2.Text;
        label13.Text = "Your Gender is: " + rdbtn1.Text;
        label14.Text = "Your Hobbies are: " + ckbx1.SelectedItem;
        label15.Text = "Your E-mail Id is: " + TextBox3.Text;
        label16.Text = "Your Class is: " + drpdn1.Text;

    }
}

Output:
 
B)Demonstrate the use of Calendar control to perform following operations:
i. Display message in calendar control.
ii. Display Vacation in calendar control.
iii. Selected date in a calendar control using style dates.
.Aspx Code:
 
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
   <div>
    <asp:Calendar ID="cal" runat="server" SelectionMode="DayWeekMonth" OnSelectionChanged="cal_SelectionChanged" OnDayRender="cal_DayRender1" OnVisibleMonthChanged="cal_VisibleMonthChanged1"></asp:Calendar>
       <p>Todays date is: 
            <asp:Label ID="lblday" runat="server"></asp:Label>
         </p>
         
         <p>Your Birthday is: 
            <asp:Label ID="lblbday" runat="server"></asp:Label>
         </p>

         <p> 
            <asp:Label ID="lblMsg" runat="server"></asp:Label>
         </p>
    </div>
    </form>
</body>
</html>

.cs Code:

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class _Default : System.Web.UI.Page
{
    Hashtable HolidayList;
    protected void Page_Load(object sender, EventArgs e)
    {
        HolidayList = GetHoliday();
        cal.Caption = "Saili";
        cal.FirstDayOfWeek = FirstDayOfWeek.Sunday;
        cal.NextPrevFormat = NextPrevFormat.ShortMonth;
        cal.TitleFormat = TitleFormat.Month;
        cal.ShowGridLines = true;
        cal.DayStyle.Height = new Unit(50);
        cal.DayStyle.Width = new Unit(50);
        cal.OtherMonthDayStyle.BackColor = System.Drawing.Color.Aquamarine;
    }
    protected void cal_SelectionChanged(object sender, EventArgs e)
    {
        lblday.Text = cal.TodaysDate.ToShortDateString();
        lblbday.Text = cal.SelectedDate.ToShortDateString();
    }
    private Hashtable GetHoliday()
    {
        Hashtable holiday = new Hashtable();
        holiday["1/1/2019"] = "New Year";
        holiday["8/5/2019"] = "Guru Govind Singh Jayanti";
        holiday["8/8/2019"] = "Muharam (Al Hijra)";
        holiday["1/14/2019"] = "Pongal";
        holiday["1/26/2019"] = "Republic Day";
        holiday["2/23/2019"] = "Maha Shivaratri";
        return holiday;
    }
    protected void cal_DayRender(object sender, DayRenderEventArgs e)
    {

    }
    protected void cal_VisibleMonthChanged1(object sender, MonthChangedEventArgs e)
    {
        lblMsg.Text = "Month changed to :" + e.NewDate.ToShortDateString();
    }
    protected void cal_DayRender1(object sender, DayRenderEventArgs e)
    {
        if (HolidayList[e.Day.Date.ToShortDateString()] != null)
        {
            Literal literal1 = new Literal();
            literal1.Text = "<br/>";
            e.Cell.Controls.Add(literal1);
            Label label1 = new Label();
            label1.Text = (string)HolidayList[e.Day.Date.ToShortDateString()];
            label1.Font.Size = new FontUnit(FontSize.Small);
            e.Cell.Controls.Add(label1);
        }
    }
} 
Output:
  




C)Demonstrate the use of tree view control & perform following operations:
i. Tree view control & data list.
ii. Tree view operations.
.aspx Code:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
    <div>
        <asp:TreeView ID="trv1" runat="server" ImageSet="Simple" ExpandDepth="1">
            <ParentNodeStyle Font-Bold="false" />
            <HoverNodeStyle Font-Underline="true" ForeColor="Blue" />
            <SelectedNodeStyle Font-Underline="true" ForeColor="Blue" VerticalPadding="0px" />
            <NodeStyle Font-Names="Tahoma" Font-Size="10pt" ForeColor="Black" HorizontalPadding="0px" NodeSpacing="0px" VerticalPadding="0px" />
            <Nodes>
                <asp:TreeNode Text="Home" NavigateUrl="/home.aspx" Target="_blank" />
                <asp:TreeNode Text="Employee" NavigateUrl="/Employee.aspx" Target="_blank" >
                <asp:TreeNode Text="Upload Resume" NavigateUrl="/UR.aspx" Target="_blank" />
                <asp:TreeNode Text="Edit Resume" NavigateUrl="/ER.aspx" Target="_blank" />
                <asp:TreeNode Text="View Resume" NavigateUrl="/VR.aspx" Target="_blank" />
                <asp:TreeNode Text="Delete Resume" NavigateUrl="/DR.aspx" Target="_blank" />
                    </asp:TreeNode>
                <asp:TreeNode Text="Employer" NavigateUrl="/Employer.aspx" Target="_blank" >
                <asp:TreeNode Text="Upload Job" NavigateUrl="/UJ.aspx" Target="_blank" />
                <asp:TreeNode Text="Edit Job" NavigateUrl="/EJ.aspx" Target="_blank" />
                <asp:TreeNode Text="View Job" NavigateUrl="/VJ.aspx" Target="_blank" />
                <asp:TreeNode Text="Delete Job" NavigateUrl="/DJ.aspx" Target="_blank" />
                    </asp:TreeNode>
                <asp:TreeNode Text="Admin" NavigateUrl="/Admin.aspx" Target="_blank" >
                <asp:TreeNode Text="Add User" NavigateUrl="/AU.aspx" Target="_blank" />
                <asp:TreeNode Text="Edit User" NavigateUrl="/EU.aspx" Target="_blank" />
                <asp:TreeNode Text="View User" NavigateUrl="/VU.aspx" Target="_blank" />
                <asp:TreeNode Text="Delete Job" NavigateUrl="/DJ.aspx" Target="_blank" />
                    </asp:TreeNode>
            </Nodes>
        </asp:TreeView>    
    </div>
    </form>
</body>
</html>
Output:
 
 
 
 
  
Practical no. 04
Working with Forms Controls
A) Aim:Create a registration form to demonstrate use of various validation controls.
Code:
4a.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
<style type="text/css">
    .auto-style1{
        text-align:left;
    }
</style>
 </head>
<body style="height:38px">
    <form id="form1" runat="server">
    <div class="auto-style1" style:"height:263px">
   <asp:Label ID="Label1" runat="server" Text="Your Name:"></asp:Label>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <asp:TextBox ID="txtname" runat="server"></asp:TextBox>
        <asp:RequiredFieldValidator ID="RequiredFieldValidator1" runat="server" ControlToValidate="txtname" ErrorMessage="Please Enter Your Name" ForeColor="Red"></asp:RequiredFieldValidator>
        <br />
        <asp:Label ID="Label2" runat="server" Text="Enter Age:"></asp:Label>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <asp:TextBox ID="txtage" runat="server"></asp:TextBox>
        <asp:RangeValidator ID="RangeValidator1" ControlToValidate="txtage" runat="server" MaximumValue="90" MinimumValue="18" Type="Integer" ForeColor="Red" ErrorMessage="Not Valid Age"></asp:RangeValidator>
        <br />
        <asp:Label ID="Label3" runat="server" Text="Password:"></asp:Label>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<asp:TextBoxID="txtpass" runat="server"TextMode="Password"></asp:TextBox>
        <br />
        <asp:LabelID="Label4" runat="server" Text="ReEnter Password:"></asp:Label>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <asp:TextBoxID="txtrepass"runat="server"TextMode="Password"></asp:TextBox>
        <asp:CompareValidator ID="CompareValidator1" runat="server" ControlToCompare="txtpass" ControlToValidate="txtrepass" ErrorMessage="Password Should Match" ForeColor="Red" Type="String"></asp:CompareValidator>
        <br />
        <asp:Label ID="Label5" runat="server" Text="Email ID:"></asp:Label>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <asp:TextBox ID="txtid" runat="server"></asp:TextBox>
        <asp:RegularExpressionValidator ID="RegularExpressionValidator1" ControlToValidate="txtid" runat="server" ErrorMessage="Please Enter Valid Email Address" ForeColor="Red"   ValidationExpression="\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*"></asp:RegularExpressionValidator>
        <br />
        <br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Validate" />
        <asp:ValidationSummary ID="ValidationSummary1" runat="server" />
  </div>
 </form>
</body>
</html>

4a.aspx.cs:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
public partial class _Default : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        Response.Write("Submitted");
    }
}




Web.config:
<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
 <configuration>
  <appSettings>
    <add key="ValidationSettings:UnobtrusiveValidationMode" value="None"/>
  </appSettings>
    <system.web>
      <compilation debug="true" targetFramework="4.5" />
      <httpRuntime targetFramework="4.5" />
    </system.web>
</configuration>
Output:

 















 
B) Aim: Create a Web Form to demonstrate use of AdRotator Control.
Code:
AdRotator.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="_Default" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
    <div style="height:311px">
    <asp:AdRotator ID="AdRotator1" runat="server" DataSourceID="XmlDataSource1" />
        <asp:XmlDataSource ID="XmlDataSource1" runat="server"
            DataFile="~/XMLFile.xml"></asp:XmlDataSource>
    </div>
    </form>
</body>
</html>

XmlFile:
<?xml version="1.0" encoding="utf-8" ?>
<Advertisements>
<Ad>
<ImageUrl>thor.jpg</ImageUrl>
<NavigateUrl>http://www.wikipedia.com/</NavigateUrl>
<AlternateText>Thor God</AlternateText>
<Impressions>20</Impressions>







<keyword>THOR</keyword>
</Ad>
<Ad>
<ImageUrl>iron man.jpg</ImageUrl>
<NavigateUrl>http://www.google.com</NavigateUrl>
<AlternateText>Iron Man</AlternateText>
<Impressions>20</Impressions>
<keyword>IRONMAN</keyword>
</Ad>
<Ad>
<ImageUrl>cap.jpg</ImageUrl>
<NavigateUrl>www.youtube.com</NavigateUrl>
<AlternateText>Captain America</AlternateText>
<Impressions>20</Impressions>
<keyword>CAP</keyword>
</Ad>
</Advertisements>

Output:
 



 



 
C)Aim:Create a web Form to demonstrate use of user control.
Code:
 4c.aspx:
<%@PageLanguage="C#" AutoEventWireup="true" CodeFile="4c.aspx.cs" Inherits="_Default" %>
 <!DOCTYPE html>
 <html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
 <title></title>
</head>
<body>
<form id="form1" runat="server">
 <div>
  <h3>This is User Control</h3>
<asp:Label ID="Label1" runat="server" Text="Name:"></asp:Label>
&nbsp;&nbsp;&nbsp;
<asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
<p>
  <asp:Label ID="Label2" runat="server" Text="City:"></asp:Label>
&nbsp;&nbsp;&nbsp &nbsp;&nbsp;
<asp:TextBox ID="TextBox2" runat="server"></asp:TextBox>
</p>
<p style="margin-left:80px">
  <asp:Button ID="Button1" runat="server" OnClick="Button1_Click" style="height:26px" Text="Save" />
</p>
<asp:Label ID="Label3" runat="server"></asp:Label>
 </div>
 </form>
</body>
</html>








4c.aspx.cs:
using System;
using System.Collections.Generic;
using Sytem.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
 public partial class _Default: System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
               }
    protected void Button1_Click(object sender, EventArgs e)
    {
            Label3.Text = "Your Name is           "+TextBox1.Text +"  and you are from  " + TextBox2.Text;
    }
}

Output:

 



Practical No.5
Working with Navigation, Identification and Master page

A)Aim: Create a web form to demonstrate use of website navigation control and sitemap.
Code:
Default1.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default1.aspx.cs" Inherits="Default1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:SiteMapPath ID="SiteMapPath1" runat="server" EnableTheming="False">
<NodeTemplate>
<asp:Menu ID="Menu1" runat="server" DataSourceID="SiteMapDataSource1">
</asp:Menu>
<asp:SiteMapDataSource ID="SiteMapDataSource1" runat="server" />
</NodeTemplate>
</asp:SiteMapPath>
</div>
</form>
</body>
</html>

Default2.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default2.aspx.cs" Inherits="Default2" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:SiteMapPath ID="SiteMapPath1" runat="server" EnableTheming="False">
</asp:SiteMapPath>
<br />Welcome to online store
</div>
</form>
</body></html>
default3.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default3.aspx.cs" Inherits="Default3" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<asp:SiteMapPath ID="SiteMapPath1" runat="server" EnableTheming="False">
</asp:SiteMapPath>
<br />
        Welcome to online shopping:Mobiles
<div>
</div>
</form>
</body>
</html>

Web.sitemap:
<?xml version="1.0" encoding="utf-8" ?>
<siteMapxmlns="http://schemas.microsoft.com/AspNet/SiteMap-File-1.0" >
<siteMapNodeurl="default1.aspx" title="Home"  description="Home of our web site">
<siteMapNodeurl="default2.aspx" title="first"  description="This is first page" />
<siteMapNodeurl="default3.aspx" title="second"  description="This is second page" />
</siteMapNode>
</siteMap>

Output:
 


















Practical no.05(b)
Aim:Create a web application to demonstrate use of masterpage with apply style sheet for a page beautification.
code:
MasterPage.master:
<%@ Master Language="C#" AutoEventWireup="true" CodeFile="MasterPage.master.cs" Inherits="MasterPage" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
<asp:ContentPlaceHolder id="head" runat="server">
</asp:ContentPlaceHolder>
</head>
<body>
<link rel="stylesheet" href="StyleSheet.css" type="text/css" />
<form id="form1" runat="server">
<div>
<asp:ContentPlaceHolder id="ContentPlaceHolder1" runat="server">
<p style="height: 37px">
&nbsp;</p>
<p>
&nbsp;</p>
<p>
&nbsp;</p>
<p>
</p>
<p>
</p>
</asp:ContentPlaceHolder>
</div>
</form>
</body>
</html>
P5b.aspx:
<%@ Page Title="" Language="C#" MasterPageFile="~/MasterPage.master" AutoEventWireup="true" CodeFile="p5b.aspx.cs" Inherits="p5b" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" Runat="Server">
</asp:Content>
<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolder1" Runat="Server">
<p>
<asp:Calendar ID="Calendar1" runat="server"></asp:Calendar>
<br />
<asp:HyperLink ID="HyperLink1" runat="server" NavigateUrl="~/p5b_2.aspx">Next</asp:HyperLink>
&nbsp;</p>
<p>
</p><p></p></asp:Content>
P5b_2.aspx:
<%@ Page Title="" Language="C#" MasterPageFile="~/MasterPage.master" AutoEventWireup="true" CodeFile="p5b_2.aspx.cs" Inherits="p5b_2" Theme="SkinFile" %>
<asp:Content ID="Content1" ContentPlaceHolderID="head" Runat="Server">
</asp:Content>
<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolder1" Runat="Server">
<p>
<asp:Label ID="Label1" runat="server" Text="Label"></asp:Label>
&nbsp;<asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
<br />
<asp:Button ID="Button1" runat="server" Text="Button" />
</p>
</asp:Content>

StyleSheet.css:
body {
background-color:aqua;
font-size:30px;
text-align:center;
}

SkinFile.skin:
<%--
Default skin template. The following skins are provided as examples only.
1. Named control skin. The SkinId should be uniquely defined because
duplicateSkinId's per control type are not allowed in the same theme.
<asp:GridViewrunat="server" SkinId="gridviewSkin" BackColor="White" >
<AlternatingRowStyleBackColor="Blue" />
</asp:GridView>
2. Default skin. The SkinId is not defined. Only one default 
control skin per control type is allowed in the same theme.
<asp:Imagerunat="server" ImageUrl="~/images/image1.jpg" />
--%>
<asp:labelrunat="server" width="300px" backcolor="red" height="40px" font-bold="true"/>

Output:
 
After clicking Next:


 Practical no.05(c)
Aim:Create a web application to demonstrate various states of ASP.NET pages.
Code:
Using session:
Userinfo.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="userinfo.aspx.cs" Inherits="userinfo" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<h1 ><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LOGIN FORM</B></h1>
<asp:Label ID="Uname" runat="server" Text="Username:"></asp:Label>
&nbsp;&nbsp;
<asp:TextBox ID="txtuser" runat="server" Width="145px"></asp:TextBox>
<br />
</div>
<asp:Label ID="pass" runat="server" Text="Password:"></asp:Label>
&nbsp;<asp:TextBox ID="txtpass" runat="server" style="margin-left: 10px" Width="145px" TextMode="Password"></asp:TextBox>
<p>
<asp:Button ID="Button1" runat="server" Text="passing data using session object" OnClick="Button1_Click" />
</p>
<p>
<asp:Button ID="Button2" runat="server" OnClick="Button2_Click" Text="using Cookie" />
</p>
</form>
</body>
</html>
Userinfo.aspx.cs
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Web;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;
public partial class userinfo : System.Web.UI.Page{
protected void Page_Load(object sender, EventArgs e)
    {

    }
protected void Button1_Click(object sender, EventArgs e)
    {
        //Passing the data using session object
        //Inserting data from textboxes into sessions
Session["Uname"] = txtuser.Text;
Session["pass"] = txtpass.Text;
Response.Redirect("~/DisplayDetails.aspx");
        //****************************************
    }
protected void Button2_Click(object sender, EventArgs e)
    {
HttpCookieCkU,CkP;
CkU = new HttpCookie("username:", txtuser.Text);
CkP = new HttpCookie("password:", txtpass.Text);
Response.AppendCookie(CkU);
Response.AppendCookie(CkP);
Response.Redirect("~/DisplayDetails.aspx");
    }
}
DisplayDetails.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="DisplayDetails.aspx.cs" Inherits="DisplayDetails" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="display username and password" />
</div>
<p>
            Welcome:
<asp:Label ID="lblName" runat="server"></asp:Label>
</p>
<p>
            Your password is:&nbsp;&nbsp;
<asp:Label ID="lblPass" runat="server"></asp:Label>
</p>
</form>
</body>
</html>
DisplayDetails.aspx.cs
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Web;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;

public partial class DisplayDetails : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
    {

    }
protected void Button1_Click(object sender, EventArgs e)
    {
lblName.Text = Convert.ToString(Session["Uname"]);
lblPass.Text = Convert.ToString(Session["pass"]);
    }
}
 
 
 





Using Cookie:
StudntDemo.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="studentDemo.aspx.cs" Inherits="studentDemo" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
&nbsp;<asp:Label ID="Label1" runat="server" Text="Login page" Width="100px"></asp:Label>
<br />
&nbsp;<asp:Label ID="lblname" runat="server" Text="Name:"></asp:Label>
&nbsp;<asp:TextBox ID="txtname" runat="server" style="margin-left: 10px" Width="138px"></asp:TextBox>
<br />
<asp:Label ID="lbladd" runat="server" Text="Address:"></asp:Label>
<asp:TextBox ID="txtadd" runat="server" style="margin-bottom: 0px" TextMode="MultiLine" Width="144px"></asp:TextBox>
<br />
<asp:Label ID="lblemail" runat="server" Text="Email:"></asp:Label>
<asp:TextBox ID="txtemail" runat="server" style="margin-left: 22px; margin-bottom: 0px" Width="148px"></asp:TextBox>
<br />
<asp:Label ID="lblcon" runat="server" Text="Contact no:"></asp:Label>
<asp:TextBox ID="txtcon" runat="server" Width="137px"></asp:TextBox>
<br />
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Save" />
</div>
</form>
</body>
</html>

StudentDemo.aspx.cs
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Web;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;
public partial class studentDemo : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
    {

    }
protected void Button1_Click(object sender, EventArgs e)
    {
HttpCookieCkn, Cka,Cke,CkC;
Ckn = new HttpCookie("name", txtname.Text);
Cka = new HttpCookie("Address", txtadd.Text);
Cke = new HttpCookie("Email", txtemail.Text);
CkC = new HttpCookie("Contact", txtcon.Text);
Response.AppendCookie(Ckn);
Response.AppendCookie(Cka);
Response.AppendCookie(Cke);
Response.AppendCookie(CkC);
Response.Redirect("~/Details.aspx");
  }
}
Details.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Details.aspx.cs" Inherits="Details" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Display details" />
</div>
<asp:Label ID="lbln" runat="server" Text="Welcome "></asp:Label>
<asp:Label ID="lname" runat="server"></asp:Label>
<p>
<asp:Label ID="lbla" runat="server" Text="Your address is:"></asp:Label>
&nbsp;<asp:Label ID="ladd" runat="server"></asp:Label>
</p>
<asp:Label ID="lble" runat="server" Text="Your email is:"></asp:Label>
&nbsp;<asp:Label ID="le" runat="server"></asp:Label>
<p>
<asp:Label ID="Label1" runat="server" Text="Your contact no is:"></asp:Label>
<asp:Label ID="lc" runat="server"></asp:Label>
</p>
</form>
</body>
</html>






Details.aspx.cs:
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Web;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;

public partial class Details : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
    {
}
protected void Button1_Click(object sender, EventArgs e)
    {
lname.Text = Request.Cookies["name"].Value;
ladd.Text = Request.Cookies["Address"].Value;
le.Text = Request.Cookies["Email"].Value;
lc.Text = Request.Cookies["Contact"].Value; 

    }
}
Output:


 




















Practical no 06
Working With Database
A)Aim: Create a web application to bind data in multiline textbox by querying in another textbox.
Code:
.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="multi.aspx.cs" Inherits="multi" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
    <center>
    <h2>Practical 6</h2>
    <h2>a. Creating a Web Application bind data in a multiline textbox by querying in another textbox.</h2>
    </center>
    <asp:Button ID="Button1" runat="server" Text="Button" onclick="Button1_Click" style="margin-left: 547px" Width="95px" />
    <br />
    <asp:TextBox ID="txtMsg" runat="server" TextMode="MultiLine" Text="<%#str %>" 
        BackColor="Black" ForeColor="#FFFF99" Height="120px" 
          Width="682px" style="margin-left: 202px"></asp:TextBox>
    &nbsp;<asp:Label ID="lblmsg" runat="server"></asp:Label>
    </form>
</body>
</html>

.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
public partial class multi : System.Web.UI.Page
{
    protected string str;
    SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=TYIT;Integrated Security=True");
    SqlCommand cmd;
    protected void Page_Load(object sender, EventArgs e)
    {
  }
    protected void Button1_Click(object sender, EventArgs e)
    {
        try
        {
            cmd = new SqlCommand("Select * from TBL_STUD_INFO", con);
            con.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                str += dr["ROllNo"] + " " + dr["name"] + "\n";
            }
            this.DataBind();
        }
        catch (Exception exp)
        {
            lblmsg.Text = exp.ToString();
        }

    }
     
    }
Output:
 















Practical No.06(b)
Aim: Create a web application to display records by using database.
Code:
.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="7b.aspx.cs" Inherits="_7b" %>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
    <center>
        <h2>
            Practical 7</h2>
        <h2>
            b. Creating a Web Application to display the details from the database.</h2>
    </center>
    <div align="center">
        Enter Roll No :
        <asp:TextBox ID="txtRoll" runat="server"></asp:TextBox>
        <br />
        <br />
        <asp:Button ID="Button1" runat="server" BackColor="Black" Font-Bold="True" ForeColor="White"
            OnClick="Button1_Click" Text="Search Record!!!" />
        <br />
        <br />
        Student Name :
        <asp:TextBox ID="txtName" runat="server" BackColor="lightblue" Enabled="False" Width="297px"></asp:TextBox>
        <br />
        <br />
        Student Class:
        <asp:TextBox ID="txtClass" runat="server" BackColor="lightblue" Enabled="False" Width="290px"></asp:TextBox>
        <br />
        <br />
        Student Email :
        <asp:TextBox ID="txtEmail" runat="server" BackColor="lightblue" Enabled="False" Width="296px"></asp:TextBox>
    </div>
    </form>
</body></html>



.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Data;

public partial class _7b : System.Web.UI.Page
{
    string str;
    SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=TYIT;Integrated Security=True");
    SqlCommand cmd;

    protected void Page_Load(object sender, EventArgs e)
    {

    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        cmd = new SqlCommand("Select * from TBL_STUD_INFO where RollNo=" + txtRoll.Text, con);
        con.Open();
        SqlDataReader dr = cmd.ExecuteReader();
        while (dr.Read())
        {
            txtClass.Text = Convert.ToString(dr["class"]);
            txtEmail.Text = Convert.ToString(dr["email"]);
            txtName.Text = Convert.ToString(dr["name"]);

        }
    }
}
Output:


Practical no.06(c)
Aim: Demonstrate the use of Datalist link control
Code:
.aspx
<%@PageLanguage="C#"AutoEventWireup="true"CodeFile="gridview.aspx.cs"Inherits="gridview"%>
<!DOCTYPEhtml>
<htmlxmlns="http://www.w3.org/1999/xhtml">
<headrunat="server">
<title></title>
</head>
<body>
<formid="form1"runat="server">
<div>
</div>
<asp:DataListID="DataList1"runat="server"DataSourceID="SqlDataSource1">
<ItemTemplate>
ROllNo:
<asp:LabelID="ROllNoLabel"runat="server"Text='<%#Eval("ROllNo") %>'/>
<br/>
name:
<asp:LabelID="nameLabel"runat="server"Text='<%#Eval("name") %>'/>
<br/>
class:
<asp:LabelID="classLabel"runat="server"Text='<%#Eval("class") %>'/>
<br/>
contact:
<asp:LabelID="contactLabel"runat="server"Text='<%#Eval("contact") %>'/>
<br/>
email:
<asp:LabelID="emailLabel"runat="server"Text='<%#Eval("email") %>'/>
<br/>
<br/>
</ItemTemplate>
</asp:DataList>
<asp:SqlDataSourceID="SqlDataSource1"runat="server"ConnectionString="<%$ ConnectionStrings:TYITConnectionString%>"SelectCommand="SELECT * FROM [TBL_STUD_INFO]"></asp:SqlDataSource>
</form>
</body>
</html>
Output:






Practical no.07
Working with Database
A)Aim: Create a web application to display Databinding using dropdownlist control.
Code:
Studentdemo.aspx
<%@PageLanguage="C#"AutoEventWireup="true"CodeFile="studentrecord.aspx.cs"Inherits="studentrecord"%>
<!DOCTYPEhtml>
<htmlxmlns="http://www.w3.org/1999/xhtml">
<headrunat="server">
<title></title>
</head>
<body>
<formid="form1"runat="server">
<center>
<h2> Creating a Web Application to display databinding using dropdownlist control.</h2>
</center>
<divalign="center">
<asp:LabelID="lblValue"runat="server"></asp:Label>
<br/>
<br/>
<asp:ButtonID="Button1"runat="server"Text="Value"onclick="Button1_Click"/>
<br/>
<br/>
<asp:DropDownListID="ddl1"runat="server"AutoPostBack="True"DataTextField="name"
onselectedindexchanged="DropDownList1_SelectedIndexChanged"DataValueField="ROllNo">
</asp:DropDownList>
</div>
</form>
</body>
</html>
Studentrecord.aspx.cs
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Web;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;
usingSystem.Data.SqlClient;
usingSystem.Data;
publicpartialclassstudentrecord : System.Web.UI.Page
{
stringstr;
SqlConnection con = newSqlConnection("Data Source=.;Initial Catalog=TYIT;Integrated Security=True");
SqlCommandcmd;
protectedvoidPage_Load(object sender, EventArgs e)
    {

    }
protectedvoid Button1_Click(object sender, EventArgs e)
    {
cmd = newSqlCommand("Select * from TBL_STUD_INFO", con);
con.Open();
SqlDataReaderdr = cmd.ExecuteReader();
        ddl1.DataSource = dr;
        ddl1.DataTextField = "name";
ddl1.DataBind();
   }
protectedvoid DropDownList1_SelectedIndexChanged(object sender, EventArgs e)
    {
lblValue.Text = Convert.ToString(ddl1.SelectedItem);
    }
}
Output:
 
 













Practical no.07(b)
Aim: Create a web application for display the phone no of an author using database.
Code:
.aspx
 <%@ Page Language="C#" AutoEventWireup="true" CodeFile="authorno.aspx.cs" Inherits="authorno" %>
<!DOCTYPE html>
  <html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div >
          <h2> Displaying&nbsp; author&#39;s number using name</h2> <br />
        <asp:Label ID="Label1" runat="server" style="font-weight: 700" Text=" Enter Author Name:"></asp:Label>
      <asp:TextBox ID="txtn" runat="server"></asp:TextBox>
&nbsp;<br />
            <asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="display number" />
            &nbsp;
            <br />
      <p>
            <asp:Label ID="lbName" runat="server" style="font-weight: 700" Text="Mobile Number:"></asp:Label>
            <asp:TextBox ID="txtno" runat="server"></asp:TextBox>
            </p>
             </div>
    </form>
</body>
</html>

.aspx.cs
 using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Data;

    public partial class authorno : System.Web.UI.Page
    {
        string str;
        SqlCommand cmd;
        SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=AUTHOR_DETAILS;Integrated Security=True");
        protected void Page_Load(object sender, EventArgs e)
        {
        }

        protected void Button1_Click(object sender, EventArgs e)
        {
            cmd = new SqlCommand("Select * from AUTHOR where name='" + txtn.Text + "'", con);
            con.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                txtno.Text = Convert.ToString(dr["contactno"]);
  }
        }

    }

Output: 
Database:















Displaying no using name:













Practical n.08
Working with GridView control

A)Aim: Create a web application to demonstrate use of GridView control 
template and GridView hyperlink.
B)Aim: Create a web application to demonstrate use of GridView button column and GridViewevents.
C) Aim: Create a web application to demonstrate use of GridView paging and creating own table format using GridView.
Code:
<%@PageLanguage="C#"AutoEventWireup="true"CodeFile="Gridview.aspx.cs"Inherits="Gridview"%>
<!DOCTYPEhtml>
<htmlxmlns="http://www.w3.org/1999/xhtml">
<headrunat="server">
<title></title>
</head>
<body>
<formid="form1"runat="server">
<div>
</div>
<asp:GridViewID="GridView1"runat="server"AllowPaging="True"AllowSorting="True"AutoGenerateColumns="False"CellPadding="4"DataSourceID="SqlDataSource1"ForeColor="#333333"GridLines="None">
<AlternatingRowStyleBackColor="White"/>
<Columns>
<asp:CommandFieldShowSelectButton="True"/>
<asp:BoundFieldDataField="ROllNo"HeaderText="ROllNo"SortExpression="ROllNo"/>
<asp:BoundFieldDataField="name"HeaderText="name"SortExpression="name"/>
<asp:BoundFieldDataField="class"HeaderText="class"SortExpression="class"/>
<asp:BoundFieldDataField="contact"HeaderText="contact"SortExpression="contact"/>
<asp:BoundFieldDataField="email"HeaderText="email"SortExpression="email"/>
</Columns>
<EditRowStyleBackColor="#2461BF"/>
<FooterStyleBackColor="#507CD1"Font-Bold="True"ForeColor="White"/>
<HeaderStyleBackColor="#507CD1"Font-Bold="True"ForeColor="White"/>
<PagerStyleBackColor="#2461BF"ForeColor="White"HorizontalAlign="Center"/>
<RowStyleBackColor="#EFF3FB"/>
<SelectedRowStyleBackColor="#D1DDF1"Font-Bold="True"ForeColor="#333333"/>
<SortedAscendingCellStyleBackColor="#F5F7FB"/>
<SortedAscendingHeaderStyleBackColor="#6D95E1"/>
<SortedDescendingCellStyleBackColor="#E9EBEF"/>
<SortedDescendingHeaderStyleBackColor="#4870BE"/>
</asp:GridView>
<asp:SqlDataSourceID="SqlDataSource1"runat="server"ConnectionString="<%$ ConnectionStrings:TYITConnectionString%>"SelectCommand="SELECT * FROM [TBL_STUD_INFO]"></asp:SqlDataSource>
</form>
</body>
</html>


Output:
 































Practical No.09
Programs to create and use DLL
Code:
.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeFile="librarydemo.aspx.cs" Inherits="librarydemo" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Label ID="lbli1" runat="server" Text="Input 1:"></asp:Label>
&nbsp;
<asp:TextBox ID="txti1" runat="server"></asp:TextBox>
<br />
<br />
<asp:Label ID="lbli2" runat="server" Text="Input2:"></asp:Label>
&nbsp;
<asp:TextBox ID="txti2" runat="server"></asp:TextBox>
<br />
<br />
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Subtraction" Width="114px" />
<asp:Label ID="lblmsg" runat="server"></asp:Label>
<br />
<br />
<asp:Button ID="Button2" runat="server" OnClick="Button2_Click" Text="cube" />
<asp:Label ID="lblcube" runat="server"></asp:Label>
<br />
<br />
<asp:Button ID="Button3" runat="server" OnClick="Button3_Click" Text="Addition" />
<asp:Label ID="lbladd" runat="server"></asp:Label>
<br />
<br />
<asp:Button ID="Button4" runat="server" OnClick="Button4_Click" Text="Multiplication" />
<asp:Label ID="lblmul" runat="server"></asp:Label>
<br />
<br />
<asp:Button ID="Button5" runat="server" OnClick="Button5_Click" Text="Division" />
<asp:Label ID="lbldiv" runat="server"></asp:Label>
<br />
<br />

<asp:Button ID="Button6" runat="server" OnClick="Button6_Click" Text="Square" />
<asp:Label ID="lblsqr" runat="server"></asp:Label>
</div>
</form>
</body>
</html>
.aspx.cs
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Web;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;
public partial class librarydemo : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
    {

    }
protected void Button1_Click(object sender, EventArgs e)
    {
        ClassLibrary1.Class1 c=new ClassLibrary1.Class1();
int result,n1,n2;
        n1=Convert.ToInt32(txti1.Text);
        n2=Convert.ToInt32(txti2.Text);
result=c.Sub(n1,n2);
lblmsg.Text="Subtraction is:"+result;
    }
protected void Button2_Click(object sender, EventArgs e)
    {
int a1, r;
        ClassLibrary1.Class1 c=new ClassLibrary1.Class1();
        a1 = Convert.ToInt32(txti1.Text);
        r = c.cube(a1);
lblcube.Text = "cube is:" + r;
    }
protected void Button3_Click(object sender, EventArgs e)
    {
        ClassLibrary1.Class1 c = new ClassLibrary1.Class1();
int res, n1, n2;
        n1 = Convert.ToInt32(txti1.Text);
        n2 = Convert.ToInt32(txti2.Text);
res = c.Add(n1, n2);
lbladd.Text = "Addition is:" + res;
    }
protected void Button4_Click(object sender, EventArgs e)
    {
        ClassLibrary1.Class1 c = new ClassLibrary1.Class1();
int re, n1, n2;
        n1 = Convert.ToInt32(txti1.Text);
        n2 = Convert.ToInt32(txti2.Text);
re = c.Mul(n1, n2);
lblmul.Text = "Multiplication  is:" + re;
    }
protected void Button5_Click(object sender, EventArgs e)
    {
        ClassLibrary1.Class1 c = new ClassLibrary1.Class1();
int op, n1, n2;
        n1 = Convert.ToInt32(txti1.Text);
        n2 = Convert.ToInt32(txti2.Text);
op = c.Div(n1, n2);
lbldiv.Text = "Division is:" + op;
    }
protected void Button6_Click(object sender, EventArgs e)
    {
int a1, sq;
        ClassLibrary1.Class1 c = new ClassLibrary1.Class1();
        a1 = Convert.ToInt32(txti1.Text);
sq = c.sqr(a1);
lblsqr.Text = "Sqaure is:" + sq;
    }
}
Class1.cs
using System;
usingSystem.Collections.Generic;
usingSystem.Linq;
usingSystem.Text;
usingSystem.Threading.Tasks;

namespace ClassLibrary1
{
public class Class1
    {
publicint Sub(int n1, int n2)
        {
int c = n1 - n2;
return c;
        }
publicint cube(int a)
        {
int c= a * a * a;
return c;
        }
publicint Add(intp,int q)
        {
int c = p + q;
return c;
        }
publicintMul(intr,int s)
        {
int c = r * s;
return c;
        }
publicintDiv(int g, int f)
        {
int c =g/f;
return c;
        }
publicintsqr(int k)
        {
int c = k*k;
return c;
        }
    }
}
Output:
 




